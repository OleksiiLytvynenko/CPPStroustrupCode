#include <iostream>
#include "..\..\std_lib_facilities.h"

constexpr double cm_m_conv_ratio = 0.01;
constexpr double in_m_conv_ratio = 2.54*cm_m_conv_ratio;
constexpr double ft_m_conv_ratio = 12.0 * in_m_conv_ratio;

// define function that converts amounts in inches, cm and ft to meters.
double convert_to_mts(double amount, string unit)
{
	double mts = 0;
	if (unit == "cm")
		mts = amount * cm_m_conv_ratio;
	else if (unit == "in")
		mts = amount * in_m_conv_ratio;
	else if (unit == "ft")
		mts = amount * ft_m_conv_ratio;
	else
		mts = amount;
	return mts;
}

int main()
{
	double max_number = 0;	// Variable to track the maxomum number
	double min_number = 0;	// Variable to track the minimum number
	double last_number = 0;	// Variable to track the last entered number
	string unit = " ";			// Variable for units.
	int count = 0;			// count to handle first entered number

	cout << "Please enter a number and a unit (cm, m, in, ft), separated by space:\n";
	while (cin >> last_number >> unit)
	{
		if (count == 0)
		{
			cout << last_number << unit << " (" << convert_to_mts(last_number, unit) << "m)" << " - The first entered number." << '\n';
			max_number = convert_to_mts(last_number, unit);
			min_number = convert_to_mts(last_number, unit);
			++count;
		}
		else if (convert_to_mts(last_number, unit) < min_number)
		{
			cout << last_number << unit << " (" << convert_to_mts(last_number, unit) << "m)" << " - The smallest entered number." << '\n';
			min_number = convert_to_mts(last_number, unit);
		}
		else if (convert_to_mts(last_number, unit) > max_number)
		{
			cout << last_number << unit << " (" << convert_to_mts(last_number, unit) << "m)" << " - The largest entered number" << '\n';
			max_number = convert_to_mts(last_number, unit);
		}
	}
}
